# 코드트리 바이브코딩 팀 프로젝트 전시 사이트 PRD

## 프로젝트 개요

### 목적
코드트리 바이브코딩 수강생들의 팀 프로젝트를 전시하는 정적 웹사이트 구축 (하드코딩 방식)

### 배경
- 총 6개 팀이 각자의 프로젝트를 완성하여 배포
- 팀 정보는 미리 하드코딩하고, 배포 링크만 추후 수동 추가
- 프로젝트 관람 후 투표를 통한 평가 진행 예정
- Replit 개발 후 Vercel 배포 예정

## 팀 정보 (하드코딩 데이터)

### 참여 팀 상세 정보
1. **Soft fund**
   - 프로젝트: 투자 성향 분석 및 펀드 추천
   - 팀원: 김준기, 류한솔, 장예원
   - 배포 링크: [수동 추가 예정]

2. **머리색깔바꿔조**
   - 프로젝트: 머리 염색 시뮬레이션
   - 팀원: 강경민, 이경택, 박화평, 박지하
   - 배포 링크: [수동 추가 예정]

3. **Packme**
   - 프로젝트: 여행체크리스트
   - 팀원: 오미영, 정선아, 김승섭
   - 배포 링크: [수동 추가 예정]

4. **취찾사**
   - 프로젝트: 취미 찾기
   - 팀원: 박지수, 장운서, 조성민
   - 배포 링크: [수동 추가 예정]

5. **4비트 조합회로**
   - 프로젝트: 시간표 자동생성기
   - 팀원: 김별, 도윤재, 용솔미, 조윤형
   - 배포 링크: [수동 추가 예정]

6. **블로그 부스터**
   - 프로젝트: 블로그 원고 자동 완성
   - 팀원: 임수정, 황선하, 진채영
   - 배포 링크: [수동 추가 예정]

## 기능 요구사항

### 1. 메인 전시 페이지

#### 1.1 프로젝트 정보 카드
- **하드코딩된 팀 정보 표시**:
  - 팀명 (고정)
  - 프로젝트 한 줄 소개 (고정)
  - 팀원 성함 (고정)
  - 서비스 배포 링크 (빈 칸으로 시작, 코드에서 수동 추가)

#### 1.2 정적 콘텐츠 구조
- 6개 팀의 정보가 카드 형태로 표시
- 링크 부분만 비워두고 나머지는 모두 하드코딩
- 반응형 그리드 레이아웃으로 카드 배치

#### 1.3 링크 표시
- 배포 링크가 있는 경우: 클릭 가능한 버튼으로 표시
- 배포 링크가 없는 경우: "준비 중" 상태 표시
- 새 탭에서 링크 열기

### 2. 투표 사이트 연결

#### 2.1 투표 페이지 이동 버튼
- 페이지 하단에 눈에 띄는 투표 버튼 배치
- 클릭 시 투표 사이트로 이동: `https://codetree-student-electon.streamlit.app/`

#### 2.2 투표 안내 정보
- 투표 시 필요한 ID 안내: "특강 구글폼 신청 시 입력한 이메일"

## 기술 요구사항

### 개발 환경
- **개발 플랫폼**: Replit
- **배포 플랫폼**: Vercel
- **기술 스택**: HTML, CSS, JavaScript (순수 프론트엔드)
- **백엔드**: 없음 (완전한 정적 사이트)

### 데이터 관리
- 모든 팀 정보 하드코딩
- 링크만 코드에서 수동 추가/수정
- 클라이언트 사이드 렌더링만 사용

## 비기능 요구사항

### 사용성
- 직관적이고 간단한 UI/UX
- 모바일 환경에서도 사용 가능한 반응형 디자인

### 성능
- 빠른 로딩 속도
- 간단한 구조로 가벼운 사이트

### 보안 및 권한
- **권한 관리 불필요**: 오프라인 환경에서 상호 링크 접근 없음
- 단순 정보 전시 목적

## 사용자 시나리오

### 강사 (개발자)
1. Replit에서 사이트 개발
2. 팀 정보 하드코딩으로 구현
3. 링크 부분은 빈 상태로 구현
4. 각 팀의 배포 완료 시 코드에서 링크 수동 추가
5. Vercel로 배포

### 학생
1. 전시 사이트 접속
2. 본인 팀 프로젝트 정보 확인
3. 다른 팀 프로젝트 구경
4. 배포된 링크 클릭하여 실제 서비스 체험
5. 투표 사이트로 이동하여 평가 참여

## UI/UX 가이드라인

### 디자인 원칙
- **심플함**: 미니멀하고 깔끔한 현대적 디자인
- **명확성**: 각 기능이 명확히 구분되는 레이아웃
- **접근성**: 누구나 쉽게 사용할 수 있는 인터페이스
- **현대적**: 트렌디한 웹 디자인 패턴 적용

### 색상 시스템
- **Primary Color**: #33bb66 (메인 브랜드 컬러)
- **Secondary Colors**: 
  - #f8f9fa (배경색)
  - #ffffff (카드 배경)
  - #6c757d (텍스트 보조색)
  - #212529 (메인 텍스트)
- **Accent Colors**:
  - #28a745 (성공/활성 상태)
  - #17a2b8 (링크 색상)

### 타이포그래피
- **메인 폰트**: 시스템 폰트 스택 (Inter, SF Pro Display, 맑은 고딕 등)
- **제목**: 24-32px, 굵은 폰트
- **본문**: 16px, 일반 폰트
- **버튼 텍스트**: 14-16px, 중간 굵기

### 레이아웃 패턴
- **카드 기반 디자인**: 각 프로젝트를 카드 형태로 표시
- **그리드 시스템**: 반응형 그리드 레이아웃
- **화이트 스페이스**: 충분한 여백으로 깔끔한 느낌
- **그림자 효과**: 미묘한 box-shadow로 깊이감 연출

### 인터랙션 디자인
- **호버 효과**: 버튼과 카드에 미묘한 호버 애니메이션
- **트랜지션**: 0.3초 내외의 부드러운 전환 효과
- **버튼 스타일**: 라운드 모서리, 그라데이션 효과

## 성공 지표

### 기능적 성공
- 모든 팀의 프로젝트 정보가 올바르게 표시
- 링크 추가 기능이 정상 작동
- 투표 사이트로의 원활한 이동

### 사용자 만족도
- 학생들이 쉽게 서로의 프로젝트를 구경할 수 있음
- 투표 참여율 향상

## 개발 일정

### Phase 1: Replit 프로젝트 설정 및 하드코딩 (2시간)
- Replit 프로젝트 생성
- HTML 기본 구조 및 팀 정보 하드코딩
- CSS 현대적 스타일링 (#33bb66 컬러 시스템 적용)
- 반응형 카드 레이아웃 구현

### Phase 2: 스타일링 및 기능 완성 (1시간)
- 투표 사이트 연결 버튼 구현
- 링크 표시 로직 구현 (있을 때/없을 때)
- 호버 효과 및 애니메이션 추가
- 모바일 반응형 최적화

### Phase 3: 배포 및 링크 추가 (30분)
- Vercel 연동 및 배포
- 각 팀 배포 완료 시 코드에서 링크 수동 추가
- 최종 테스트

## 코드 구조 (하드코딩)

### HTML 데이터 구조 예시
```html
<div class="project-card">
    <h3>Soft fund</h3>
    <p>투자 성향 분석 및 펀드 추천</p>
    <div class="members">김준기, 류한솔, 장예원</div>
    <div class="link-section">
        <!-- 링크 있을 때: <a href="URL">프로젝트 보기</a> -->
        <!-- 링크 없을 때: <span class="coming-soon">준비 중</span> -->
    </div>
</div>
```

### 링크 추가 방법
1. 해당 팀의 HTML 찾기
2. `link-section` 내부 수정
3. `<span class="coming-soon">준비 중</span>`을 
   `<a href="배포URL" target="_blank">프로젝트 보기</a>`로 변경
4. Vercel 자동 재배포

## 리스크 및 대응 방안

### 기술적 리스크
- **로컬 스토리지 데이터 손실**: 데이터 내보내기/가져오기 기능 추가
- **브라우저 호환성**: 모던 브라우저 지원 (IE 제외)
- **Vercel 배포 이슈**: 정적 파일 최적화 및 빌드 설정

### 운영 리스크
- **사용자 실수**: 명확한 사용 가이드 제공
- **링크 오류**: 링크 유효성 간단 체크 기능
- **모바일 접근성**: 터치 인터페이스 최적화

## 추후 개선 사항 (선택사항)

- **Progressive Web App (PWA)** 기능 추가
- **다크 모드** 지원
- **프로젝트 필터링 및 검색** 기능
- **소셜 공유** 기능
- **QR 코드 생성**으로 모바일 접근성 향상
- **애니메이션 효과** 강화 (GSAP 등 활용)
- **데이터 내보내기** 기능 (JSON/CSV)

## Vercel 배포 고려사항

### 성능 최적화
- **이미지 최적화**: WebP 포맷 사용
- **CSS/JS 최소화**: 압축 및 번들링
- **CDN 활용**: 정적 자원 최적화

### SEO 및 메타 태그
- **Open Graph** 태그 설정
- **메타 디스크립션** 최적화
- **파비콘** 설정

### 보안
- **Content Security Policy** 설정
- **HTTPS** 강제 리다이렉트
- **환경 변수** 관리 (필요시)